{"version":3,"sources":["image/logo.png","services/service.js","components/search-block/search-block.js","components/map-block/index.js","components/map-block/map-block.js","components/header/header.js","components/query-history/queryHistory.js","components/chart/chart.js","components/company-description/CompanyDescription.js","components/fullDescription/fullDescription.js","components/companyList/companyList.js","App.js","index.js"],"names":["module","exports","Service","_apiKey","_apiFNS","getCompany","query","a","axios","res","console","log","data","items","verificationPartner","INN","_transformVerification","ЮЛ","ИП","partner","Positive","Позитив","Negative","Негатив","getStatement","getFullInformation","_apiKeyYandex","_apiYandex","this","getСoordinates","response","GeoObjectCollection","featureMember","GeoObject","Point","pos","getCoord","address","SearchBlock","loading","onSearchCompany","error","useState","input","setInput","size","className","placeholder","value","onChange","event","target","type","htmlType","icon","SearchOutlined","onClick","preventDefault","style","width","margin","message","description","showIcon","MapBlock","list","company","setLoadingFalse","zoom","setZoom","center","setCenter","useEffect","point","ns","load","height","defaultState","controls","defaultGeometry","properties","balloonContentBody","НаимПолнЮЛ","ФИОПолн","ИНН","ОГРН","АдресПолн","Статус","ОснВидДеят","map","i","options","float","Header","src","logo","alt","QueryHistory","historyList","length","item","name","marginLeft","background","padding","fontSize","fontWeight","Chart","positive","negative","innerRadius","padAngle","stroke","strokeWidth","colorScale","x","y","Object","keys","Panel","Collapse","CompanyDescription","status","active","header","key","marginTop","FullDescription","information","Array","isArray","CompanyList","companyNull","onGetCompany","to","НаимСокрЮЛ","activeClassName","App","service","state","fullInformation","setState","searchCompany","props","history","push","newItem","then","hasOwnProperty","ГдеНайдено","getCoordinates","indexOf","verificatePartner","onGetStatement","window","open","onGetInformation","localStorage","getItem","JSON","parse","setItem","stringify","slice","split","paddingTop","onGetCoordinates","getInformation","DownloadOutlined","exact","path","render","Component","AppContainer","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c4e26e99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0449d2d5.png\";","import * as axios from \"axios\";\r\n\r\nexport default class Service {\r\n\r\n  _apiKey = '&key=1b75eebcf8f54699935d9cc3e07d46c674e9b271';\r\n  _apiFNS = 'https://api-fns.ru/api/search?q=';\r\n  // _corsAnywhere = 'https://cors-anywhere.herokuapp.com/';\r\n\r\n  getCompany = async (query) => {\r\n\r\n    const res = await axios.get(`${this._apiFNS}${query}${this._apiKey}`);\r\n\r\n    console.log(res.data.items);\r\n    return res.data.items;\r\n  }\r\n\r\n  verificationPartner = async (INN) => {\r\n\r\n    const query = await axios.get(`https://api-fns.ru/api/check?req=${INN}${this._apiKey}`);\r\n\r\n    return this._transformVerification(query.data.items[0].ЮЛ || query.data.items[0].ИП);\r\n  }\r\n\r\n  _transformVerification = (partner) => {\r\n\r\n    return {\r\n      Positive: partner.Позитив,\r\n      Negative: partner.Негатив\r\n    }\r\n  }\r\n\r\n  getStatement = async (INN) => {\r\n    return `https://api-fns.ru/api/vyp?req=${INN}${this._apiKey}`;\r\n  }\r\n\r\n  getFullInformation = async (INN) => {\r\n\r\n    const query = await axios.get(`https://api-fns.ru/api/egr?req=${INN}&key=${this._apiKey}`);\r\n\r\n    return query.data.items[0].ЮЛ || query.data.items[0].ИП;\r\n  }\r\n\r\n  _apiKeyYandex = 'fbe27a07-f3ff-4ee7-b8a6-801e7e021216';\r\n\r\n  _apiYandex = `https://geocode-maps.yandex.ru/1.x/?format=json&apikey=${this._apiKeyYandex}&geocode=`;\r\n\r\n  getСoordinates = async (query) => {\r\n\r\n    const res = await axios.get(`${this._apiYandex}${query}`);\r\n\r\n    return res.data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;\r\n\r\n  }\r\n\r\n  getCoord = async (address) => {\r\n    const res = await this.getСoordinates(address)\r\n    return res;\r\n  }\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\n\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport './search-block.scss';\r\n\r\nconst SearchBlock = ({ loading, onSearchCompany, error }) => {\r\n\r\n  const [input, setInput] = useState('');\r\n\r\n  const inputChange = (event) => {\r\n    setInput(event.target.value)\r\n  }\r\n\r\n  const submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    onSearchCompany(input);\r\n    setInput('');\r\n\r\n  }\r\n\r\n  if (loading) {\r\n    return <Spin size=\"large\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n\r\n      <Form>\r\n        <Input placeholder=\"Например: 'угату'\"\r\n          value={input}\r\n          onChange={inputChange} />\r\n\r\n        <Button type=\"primary\"\r\n          htmlType=\"submit\"\r\n          icon={<SearchOutlined />}\r\n          onClick={submit}>\r\n\r\n          Поиск\r\n        </Button>\r\n\r\n        {error &&\r\n          <Alert style={{ width: 400, margin: '5px auto 0' }}\r\n            message=\"Ошибка\"\r\n            description=\"Поле не может быть пустым.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        }\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBlock;\r\n","import MapBlock from './map-block';\r\n\r\nexport default MapBlock;","import React from 'react';\r\nimport { YMaps, Map, Placemark, GeolocationControl } from 'react-yandex-maps';\r\n\r\nimport './map-block.scss';\r\nimport { Spin } from 'antd';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst MapBlock = ({ list, loading, company, setLoadingFalse }) => {\r\n\r\n  const [zoom, setZoom] = useState(11);\r\n  const [center, setCenter] = useState([54.75, 56.00]);\r\n\r\n  useEffect(() => {\r\n    if (company) {\r\n      setLoadingFalse();\r\n      setZoom(17);\r\n      setCenter([company.point[1], company.point[0]])\r\n    }\r\n  }, [company]);\r\n\r\n\r\n  if (loading) {\r\n    return <Spin size=\"large\" />\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"map\">\r\n      <YMaps query={{\r\n        ns: 'use-load-option',\r\n        load:\r\n          'Map,Placemark,control.ZoomControl,control.FullscreenControl,geoObject.addon.balloon',\r\n      }}>\r\n\r\n        <Map style={{ width: 650, height: 500 }}\r\n          defaultState={{\r\n            center: center,\r\n            zoom: zoom,\r\n            controls: ['zoomControl', 'fullscreenControl']\r\n          }}\r\n        >\r\n          {company\r\n            ? <Placemark defaultGeometry={[company.point[1], company.point[0]]}\r\n              properties={{\r\n                balloonContentBody:\r\n                  `<b>Наименование:</b> ${company.НаимПолнЮЛ || company.ФИОПолн} <hr>\r\n              <b>ИНН:</b> ${company.ИНН}<hr>\r\n              <b>ОГРН:</b> ${company.ОГРН}<hr>\r\n              <b>Адрес:</b> ${company.АдресПолн}<hr>\r\n              <b>Статус:</b> ${company.Статус}<hr>\r\n              <b>Вид деятельности:</b> ${company.ОснВидДеят}`\r\n              }} />\r\n            : list\r\n              ? list.map((i) => {\r\n\r\n                return <Placemark defaultGeometry={[i.point[1], i.point[0]]}\r\n                  properties={{\r\n                    balloonContentBody:\r\n                      `<b>Наименование:</b> ${i.НаимПолнЮЛ || i.ФИОПолн}<hr>\r\n                    <b>ИНН:</b> ${i.ИНН}<hr>\r\n                    <b>ОГРН:</b> ${i.ОГРН}<hr>\r\n                    <b>Адрес:</b> ${i.АдресПолн}<hr>\r\n                    <b>Статус:</b> ${i.Статус}<hr>\r\n                    <b>Вид деятельности:</b> ${i.ОснВидДеят}`\r\n                  }} />\r\n              })\r\n              : null\r\n          }\r\n\r\n\r\n          <GeolocationControl options={{ float: 'left' }} />\r\n        </Map>\r\n\r\n      </YMaps >\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapBlock;","import React from 'react';\r\n\r\nimport './header.scss';\r\nimport logo from '../../image/logo.png';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <div className=\"header\">\r\n\r\n            <div className=\"header__wrapper\">\r\n\r\n                <img src={logo} alt=\"logo\" />\r\n\r\n                <span>\r\n                    ФНС проверка контрагента!!!\r\n                </span>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './queryHistory.scss'\r\n\r\nconst QueryHistory = ({ historyList, onSearchCompany }) => {\r\n\r\n\r\n    if (historyList.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const items = historyList.map((item) => {\r\n\r\n        return (\r\n            <div className='history__item'>\r\n                <span onClick={() => onSearchCompany(item.name)}>\r\n                    {item.name}\r\n                </span>\r\n                <hr />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div style={{\r\n            marginLeft: 35,\r\n            background: 'white',\r\n            padding: '10px 20px'\r\n        }}>\r\n\r\n            <p style={{\r\n                fontSize: 17,\r\n                fontWeight: 500\r\n            }}>История запросов\r\n            </p>\r\n\r\n            {items}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QueryHistory;","import React from 'react';\r\nimport { VictoryPie } from 'victory';\r\n\r\nconst Chart = ({ positive, negative }) => {\r\n\r\n    console.log();\r\n    return (\r\n        <div>\r\n            {/* <h3 style={{ textAlign: 'center', marginBottom: 0 }}>График</h3> */}\r\n\r\n            <VictoryPie height={320}\r\n                width={320}\r\n                innerRadius={60}\r\n                padAngle={5}\r\n                style={{\r\n                    data: {\r\n                        stroke: \"#c43a31\", strokeWidth: 1\r\n                    }\r\n                }}\r\n                colorScale={[\"rgb(230, 118, 137)\", \"#74A8DA\"]}\r\n                data={[\r\n                    { x: \"Neg\", y: Object.keys(negative).length - 1 },\r\n                    { x: \"Pos\", y: Object.keys(positive).length - 1 }\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../chart/chart';\r\n\r\nimport './companyDescription.scss';\r\nimport { Spin, Collapse } from 'antd';\r\nconst { Panel } = Collapse;\r\n\r\nconst CompanyDescription = ({ positive, negative, status }) => {\r\n\r\n  if (!positive || !negative) {\r\n    return <Spin size=\"large\" />\r\n  }\r\n\r\n  const active = status === \"Действующее\" ? 'active' : 'unActive';\r\n\r\n  return (\r\n\r\n    <div className=\"description\">\r\n\r\n      <div>\r\n        <b style={{ fontSize: 17 }}>Позитивные факторы:</b>\r\n        {Object.keys(positive).length > 0\r\n\r\n          ? Object.keys(positive).map((item) => {\r\n\r\n            if (typeof positive[item] === 'object') {\r\n\r\n              return <Collapse style={{ marginLeft: 7 }}>\r\n                <Panel header={item} key={item}>\r\n                  {Object.keys(positive[item]).map((i) => {\r\n                    return (\r\n                      <span>\r\n                        <span>\r\n                          <b>{i}:</b> {positive[item][i]}\r\n                        </span>\r\n                        <hr />\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </Panel>\r\n              </Collapse>\r\n            }\r\n\r\n            return <p style={{ marginLeft: 15 }}>\r\n              <b>{item}:</b> {positive[item]}\r\n            </p>\r\n\r\n          })\r\n          : <p style={{ marginLeft: 15 }}>Позитивные факторы отсутствуют</p>\r\n        }\r\n      </div>\r\n      <hr />\r\n      <div style={{ marginTop: 20 }}>\r\n\r\n        <b style={{ fontSize: 17 }}>Негативные факторы:</b>\r\n        {Object.keys(negative).length > 0\r\n          ? Object.keys(negative).map((item) => {\r\n\r\n            if (typeof negative[item] === 'object') {\r\n\r\n              return <Collapse style={{ marginLeft: 7 }}>\r\n                <Panel header={item} key={item}>\r\n                  {Object.keys(negative[item]).map((i) => {\r\n                    return (\r\n                      <span>\r\n                        <span>\r\n                          <b>{i}:</b> {negative[item][i]}\r\n                        </span>\r\n                        <hr />\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </Panel>\r\n              </Collapse>\r\n            }\r\n\r\n            return <p style={{ marginLeft: 15 }}>\r\n              <b>{item}:</b> {negative[item]}\r\n            </p>;\r\n          })\r\n          : <p style={{ marginLeft: 15 }}>Негативные факторы отсутствуют</p>\r\n        }\r\n      </div>\r\n      <hr />\r\n      <p>Статус: <span className={active}>{status}</span></p>\r\n\r\n      <Chart positive={positive}\r\n        negative={negative} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyDescription;","import React from 'react';\r\n\r\nimport './fullDescription.scss';\r\nimport { Spin, Collapse } from 'antd';\r\nconst { Panel } = Collapse;\r\n\r\nconst FullDescription = ({ information }) => {\r\n\r\n\r\n  if (!information) {\r\n    return <Spin size=\"large\" />\r\n  }\r\n  console.log(information);\r\n  return (\r\n\r\n    <div className=\"fullDescription\">\r\n\r\n      <div>\r\n        <b style={{ fontSize: 17 }}>Полная информация:</b>\r\n        {\r\n          Object.keys(information).map((item) => {\r\n\r\n            if (Array.isArray(information[item])) {\r\n\r\n              information[item].map((i) => {\r\n                return null\r\n              })\r\n            }\r\n\r\n            if (typeof information[item] === 'object') {\r\n\r\n              return <Collapse style={{ marginLeft: 7 }}>\r\n                <Panel header={item} key={item}> {Object.keys(information[item]).map((i) => {\r\n\r\n                  return (\r\n                    <span>\r\n                      <span>\r\n                        <b>{i}:</b> {information[item][i]}\r\n                      </span>\r\n                      <hr />\r\n                    </span>\r\n                  );\r\n                })}\r\n                </Panel>\r\n              </Collapse>\r\n            }\r\n\r\n            return <p style={{ marginLeft: 7 }}>\r\n              <b>{item}:</b> {information[item]}\r\n              <hr />\r\n            </p>\r\n          })\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FullDescription;","import React from 'react';\r\n\r\nimport './companyList.scss';\r\nimport { Spin } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\nconst CompanyList = ({ companyNull, list, onGetCompany, loading }) => {\r\n\r\n  useEffect(() => {\r\n    companyNull();\r\n  }, []);\r\n\r\n  if (!list || loading) {\r\n    return <Spin size=\"large\" />\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"companyList\">\r\n\r\n      <div>\r\n        {\r\n          list.map((item) => {\r\n\r\n            return <div key={item.ИНН}\r\n              onClick={() => onGetCompany(item)}\r\n              className='company'>\r\n\r\n              <NavLink to={`/company_list/${item.НаимСокрЮЛ}`}\r\n                activeClassName='company_active' >\r\n\r\n                {item.НаимПолнЮЛ || item.ФИОПолн}\r\n\r\n              </NavLink>\r\n              <p>\r\n                Статус:\r\n              <span className={\r\n                  item.Статус === \"Действующее\" ? 'active' : 'unActive'\r\n                }>\r\n\r\n                  {item.Статус}\r\n                </span>\r\n              </p>\r\n              <hr />\r\n\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyList;","import React, { Component } from 'react';\r\n\r\n\r\nimport Service from './services/service';\r\nimport SearchBlock from './components/search-block/search-block';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\n\r\nimport MapBlock from './components/map-block';\r\nimport Header from './components/header/header';\r\nimport QueryHistory from './components/query-history/queryHistory';\r\nimport CompanyDescription from './components/company-description/CompanyDescription';\r\nimport FullDescription from './components/fullDescription/fullDescription';\r\nimport { Route, withRouter, NavLink } from 'react-router-dom';\r\nimport CompanyList from './components/companyList/companyList';\r\nimport { Button } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\nclass App extends Component {\r\n\r\n  service = new Service();\r\n\r\n  state = {\r\n    list: [],\r\n    company: null,\r\n    error: false,\r\n\r\n    loading: false,\r\n\r\n    Positive: null,\r\n    Negative: null,\r\n\r\n    historyList: [],\r\n\r\n    fullInformation: null\r\n  }\r\n\r\n  companyNull = () => {\r\n    this.setState({\r\n      company: null\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (localStorage.getItem('company') !== null) {\r\n      const historyList = JSON.parse(localStorage.getItem('company'));\r\n\r\n      this.setState({\r\n        historyList\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\r\n    localStorage.setItem('company', JSON.stringify(this.state.historyList));\r\n\r\n    if (localStorage.getItem('company') !== null) {\r\n\r\n      const historyList = JSON.parse(localStorage.getItem('company'));\r\n\r\n      if (historyList.length === 6) {\r\n        this.setState((state) => {\r\n          return {\r\n            historyList: state.historyList.slice(1)\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  searchCompany = (name) => {\r\n\r\n    if (!name) {\r\n      this.setState({\r\n        error: true\r\n      })\r\n      return\r\n    } else {\r\n      this.setState({\r\n        error: false\r\n      })\r\n    }\r\n\r\n    this.props.history.push('/company_list');\r\n    const newItem = { name }\r\n\r\n    this.setState({\r\n      list: [],\r\n      historyList: [...this.state.historyList, newItem],\r\n    })\r\n\r\n\r\n    this.setState({\r\n      loading: true,\r\n      Positive: null,\r\n      Negative: null\r\n    });\r\n\r\n    this.service\r\n      .getCompany(name)\r\n      .then((list) => {\r\n\r\n        list.map((item) => {\r\n\r\n          if (item.hasOwnProperty('ЮЛ')) {\r\n\r\n            if (item.ЮЛ.ГдеНайдено === 'ИНН') {\r\n\r\n              return this.getCoordinates([item.ЮЛ]);\r\n\r\n            } else if (item.ЮЛ.ГдеНайдено === 'ОГРН') {\r\n              return this.getCoordinates([item.ЮЛ]);\r\n\r\n            } else if (item.ЮЛ.ГдеНайдено.indexOf('Наименование ЮЛ' || 'ФИО') > -1) {\r\n              return this.getCoordinates([item.ЮЛ]);\r\n            }\r\n\r\n          } else if (item.hasOwnProperty('ИП')) {\r\n\r\n            return this.getCoordinates([item.ИП]);\r\n          }\r\n        })\r\n      });\r\n  }\r\n\r\n  getCoordinates(list) {\r\n\r\n    list.map((i) => {\r\n\r\n      this.service\r\n        .getCoord(i.АдресПолн)\r\n\r\n        .then((res) => {\r\n          this.setState({\r\n\r\n            list: [...this.state.list, { ...i, point: res.split(' ') }],\r\n          })\r\n        })\r\n\r\n    });\r\n\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  verificatePartner = () => {\r\n\r\n    this.service\r\n      .verificationPartner(this.state.company.ИНН)\r\n\r\n      .then((res) => {\r\n\r\n        this.setState({\r\n          Positive: res.Positive,\r\n          Negative: res.Negative,\r\n        });\r\n      })\r\n  }\r\n\r\n  onGetStatement = () => {\r\n    this.service\r\n      .getStatement(this.state.company.ИНН)\r\n      .then((res) => {\r\n        window.open(res);\r\n      })\r\n  }\r\n\r\n  onGetInformation = () => {\r\n    this.service\r\n      .getFullInformation(this.state.company.ИНН)\r\n      .then((res) => {\r\n\r\n        this.setState({\r\n          fullInformation: res\r\n        })\r\n      })\r\n  }\r\n\r\n  getCompany = (company) => {\r\n\r\n    if (company === this.state.company) {\r\n      return\r\n    }\r\n    this.setState({\r\n      loading: true,\r\n      company: company\r\n    })\r\n  }\r\n\r\n  setLoadingFalse = () => {\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { list, error, loading, Positive, Negative, historyList, fullInformation, company } = this.state;\r\n\r\n    return (\r\n      <div className=\"main\">\r\n\r\n        <Header />\r\n        <div className=\"search\">\r\n          <div style={{ paddingTop: 30 }} className=\"search__wrapper\">\r\n            <div style={{\r\n              padding: 10\r\n            }}>\r\n\r\n              <SearchBlock onSearchCompany={this.searchCompany}\r\n                error={error} />\r\n\r\n              <MapBlock list={list}\r\n                onGetCoordinates={this.getCoordinates}\r\n                loading={loading}\r\n                verificatePartner={this.verificatePartner}\r\n                getStatement={this.onGetStatement}\r\n                getInformation={this.onGetInformation}\r\n                company={company}\r\n                setLoadingFalse={this.setLoadingFalse} />\r\n\r\n              {company &&\r\n                <div style={{ marginTop: 20 }}>\r\n\r\n                  <Button style={{ width: 200 }}\r\n                    type='primary'\r\n                    onClick={this.verificatePartner}>\r\n\r\n                    <NavLink to={`/company_list/${company.НаимСокрЮЛ}/check`}>\r\n                      Проверить контрагента\r\n                    </NavLink>\r\n\r\n                  </Button>\r\n\r\n                  <Button style={{\r\n                    width: 200,\r\n                    marginLeft: 15\r\n                  }}\r\n                    type='primary'\r\n                    onClick={this.onGetInformation}>\r\n\r\n                    <NavLink to={`/company_list/${company.НаимСокрЮЛ}/full_information`}>\r\n                      Полная информация\r\n                    </NavLink>\r\n\r\n                  </Button>\r\n\r\n                  <Button style={{\r\n                    width: 200,\r\n                    marginLeft: 15\r\n                  }}\r\n                    type='primary'\r\n                    onClick={this.onGetStatement}\r\n                    icon={<DownloadOutlined />} size='large' >\r\n\r\n                    Получить выписку\r\n                  </Button>\r\n\r\n                </div>\r\n              }\r\n            </div>\r\n\r\n\r\n            <Route exact path='/company_list' render={() =>\r\n\r\n              <CompanyList companyNull={this.companyNull}\r\n                list={list}\r\n                onGetCompany={this.getCompany}\r\n                loading={loading} />}\r\n            />\r\n            <Route path={`/company_list/:company/check`} render={() =>\r\n\r\n              <CompanyDescription status={company.Статус}\r\n                positive={Positive}\r\n                negative={Negative} />}\r\n            />\r\n            <Route path='/company_list/:company/full_information' render={() =>\r\n\r\n              <FullDescription information={fullInformation} />}\r\n            />\r\n\r\n            <QueryHistory onSearchCompany={this.searchCompany}\r\n              historyList={historyList} />\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppContainer = withRouter(App);\r\n\r\nexport default AppContainer;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport AppContainer from './App';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <AppContainer />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));"],"sourceRoot":""}